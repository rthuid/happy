//Gradient
@mixin gradient($from:#fff,$to:#bed1ee){
    /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/$from+0,bed1ee+100 */
    background: $to; /* Old browsers */
    background: -moz-linear-gradient(top, $from 0%, $to 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(top, $from 0%,$to 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to bottom, $from 0%,$to 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=0 ); /* IE6-9 */
}
//transform
// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
// generic transform
@mixin transformOrigin($x :50%,$y:100%) {
    transform-origin: $x $y;
    -webkit-transform-origin: $x $y;
    -moz-transform-origin: $x $y;
    -o-transform-origin: $x $y;
    -ms-transform-origin: $x $y;
}
// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}
// rotate and translate
@mixin rotateTranslate ($deg, $x, $y) {
    @include transform(rotate(#{$deg}deg)translate($x, $y));
}
//--------------------------------------------------------//
//Transition
@mixin transition($prop:all,$time:.9s, $fun:cubic-bezier(0.90, -0.35, 0.290, 1.35)) {
    -webkit-transition: $prop $time $fun;
    -moz-transition: $prop $time $fun;
    -ms-transition: $prop $time $fun;
    -o-transition: $prop $time $fun;
    transition: $prop $time $fun;
}
//--------------------------------------------------------//
//Placeholdr
@mixin placeholder($color:$clr-twilight-blue) {
    ::-webkit-input-placeholder {
        /* Chrome/Opera/Safari */
        color: $color;
    }
    ::-moz-placeholder {
        /* Firefox 19+ */
        color: $color;
    }
    :-ms-input-placeholder {
        /* IE 10+ */
        color: $color;
    }
    :-moz-placeholder {
        /* Firefox 18- */
        color: $color;
    }
}
//--------------------------------------------------------//
//Text and Box Shadow
@mixin box-shadow($top:0, $left:5px, $blur:4px, $color:rgba(0, 0, 0, 0.5), $inset: false) {
    @if $inset {
      -webkit-box-shadow:inset $top $left $blur $color;
      -moz-box-shadow:inset $top $left $blur $color;
      box-shadow:inset $top $left $blur $color;
    } @else {
      -webkit-box-shadow: $top $left $blur $color;
      -moz-box-shadow: $top $left $blur $color;
      box-shadow: $top $left $blur $color;
    }
  }
  @mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
      text-shadow: $x $y $blur $color;
  }
//--------------------------------------------------------//
//flex
//flex master
@mixin flex-master($flex-direction:column,$flex-wrap:nowrap,$align-content:stretch,$align-items:center) {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: $flex-direction;
    -ms-flex-direction: $flex-direction;
    flex-direction: $flex-direction;
    -webkit-flex-wrap: $flex-wrap;
    -ms-flex-wrap: $flex-wrap;
    flex-wrap: $flex-wrap;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-content: $align-content;
    -ms-flex-line-pack: $align-content;
    align-content: $align-content;
    -webkit-align-items: $align-items;
    -ms-flex-align: $align-items;
    align-items: $align-items;
}

//flex container
@mixin display-flex() {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex-direction($value:column) {
    -webkit-flex-direction: $value;
    -ms-flex-direction: $value;
    flex-direction: $value;
}

@mixin flex-flex-wrap($value:nowrap) {
    -webkit-flex-wrap: $value;
    -ms-flex-wrap: $value;
    flex-wrap: $value;
}

@mixin flex-justify-content() {
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
}

@mixin flex-align-content($value:stretch) {
    -webkit-align-content: $value;
    -ms-flex-line-pack: $value;
    align-content: $value;
}

@mixin flex-align-items($value:center) {
    -webkit-align-items: $value;
    -ms-flex-align: $value;
    align-items: $value;
}

//flex items

@mixin flex-order($value:0) {
    -webkit-order: $value;
    -ms-flex-order: $value;
    order: $value;
}
@mixin flex-self($value:0 1 auto) {
    -webkit-flex: $value;
    -ms-flex: $value;
    flex: $value;
}
@mixin flex-align-self($value:stretch) {
    -webkit-align-self: $value;
    -ms-flex-item-align: $value;
    align-self: $value;
}
//--------------------------------------------------------//
//button
// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@mixin button-variant($color:$clr-white, $background:$clr-water-blue, $border:$clr-water-blue) {
    color: $color;
    background-color: $background;
    border: solid 1px $border;
    border-radius: 0;
    font-size: $font-size-medium;
    padding: $padding-default/2 $padding-default*2;
    @include transition($time:.3s,$fun:ease-in);
    &:focus,
    &.focus {
        color: $color;
        background-color: darken($background, 6%);
        border-color: darken($border, 15%);
    }
    &:hover {
        color: $color;
        background-color: darken($background, 5%);
        border-color: darken($border, 12%);
    }
    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: $color;
        background-color: darken($background, 6%);
        border-color: darken($border, 12%);

        &:hover,
        &:focus,
        &.focus {
            color: $color;
            background-color: darken($background, 17%);
            border-color: darken($border, 25%);
            outline: none 0;
        }
    }
    &:active,
    &.active,
    .open > &.dropdown-toggle {
        background-image: none;
        outline: none 0;
    }
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        &:hover,
        &:focus,
        &.focus {
            background-color: $background;
            border-color: $border;
            outline: none 0;
        }
    }

    .badge {
        color: $background;
        background-color: $color;
    }
}

// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border-radius: $border-radius;
}
